@use '@angular/material' as mat;
@import '@angular/material/theming';
@include mat.core();

// Custom background palette for dark theme
$custom-dark-theme-background: (
  status-bar: black,
  app-bar: map-get(mat.$blue-grey-palette, 900),
  background: map-get(mat.$blue-grey-palette, 900),
  hover: rgba(white, 0.04),
  // TODO(kara): check style with Material Design UX
  card: map-get(mat.$blue-grey-palette, 800),
  dialog: map-get(mat.$blue-grey-palette, 800),
  disabled-button: rgba(white, 0.12),
  raised-button: map-get(mat.$blue-grey-palette, 800),
  focused-button: $light-focused,
  selected-button: map-get(mat.$blue-grey-palette, 900),
  selected-disabled-button: map-get(mat.$blue-grey-palette, 800),
  disabled-button-toggle: black,
  unselected-chip: map-get(mat.$blue-grey-palette, 700),
  disabled-list-option: black,
  tooltip: map-get(mat.$blue-grey-palette, 700),
);

// Custom foreground palette for dark theme
$custom-dark-theme-foreground: (
  base: white,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: rgba(white, 0.3),
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-secondary-text,
  icon: white,
  icons: white,
  text: white,
  slider-min: white,
  slider-off: rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

$app-light-primary: mat.define-palette(mat.$deep-orange-palette, 600);
$app-light-accent: mat.define-palette(mat.$deep-orange-palette, 900);
$app-light-warn: mat.define-palette(mat.$red-palette, 900);
$app-light-neutral: mat.define-palette(mat.$blue-grey-palette, 600);

$app-light-background: mat.define-palette(mat.$blue-grey-palette, 50);

$app-dark-primary: mat.define-palette(mat.$orange-palette, 200);
$app-dark-accent: mat.define-palette(mat.$orange-palette, 600);
$app-dark-warn: mat.define-palette(mat.$deep-orange-palette, 900);
$app-dark-neutral: mat.define-palette(mat.$blue-grey-palette, 400);

$app-dark-foreground: mat.define-palette(mat.$blue-grey-palette, 800);
$app-dark-background: mat.define-palette(mat.$blue-grey-palette, 900);

@function custom-dark-theme($primary, $accent, $warn) {
  @return (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: true,
      foreground: $custom-dark-theme-foreground,
      background: $custom-dark-theme-background,
    )
  );
}

$app-light-theme: mat.define-light-theme($app-light-primary, $app-light-accent, $app-light-warn);
$app-dark-theme: custom-dark-theme($app-dark-primary, $app-dark-accent, $app-dark-warn);

@include mat.all-component-themes($app-dark-theme);

.light-theme {
  @include mat.all-component-themes($app-light-theme);

  .sorted-column-header {
    font-size: 14px;
    color: mat.get-color-from-palette($app-light-primary);
  }

  .highlight-color {
    color: mat.get-color-from-palette($app-light-primary);
  }

  .highlight-background {
    background-color: mat.get-color-from-palette($app-light-primary);
  }

  .neutral-color {
    color: mat.get-color-from-palette($app-light-neutral);
  }

  .neutral-background {
    background-color: mat.get-color-from-palette($app-light-neutral);
  }

  .foreground {
    background-color: white;
  }

  .background {
    background-color: mat.get-color-from-palette($app-light-background);
  }
}

.dark-theme {
  @include mat.all-component-themes($app-dark-theme);

  .sorted-column-header {
    font-size: 14px;
    color: mat.get-color-from-palette($app-dark-primary);
  }

  .highlight-color {
    color: mat.get-color-from-palette($app-dark-primary);
  }

  .highlight-background {
    background-color: mat.get-color-from-palette($app-dark-primary);
  }

  .neutral-color {
    color: mat.get-color-from-palette($app-dark-neutral);
  }

  .neutral-background {
    background-color: mat.get-color-from-palette($app-dark-neutral);
  }

  .foreground {
    background-color: mat.get-color-from-palette($app-dark-foreground);
  }

  .background {
    background-color: mat.get-color-from-palette($app-dark-background);
  }
}
